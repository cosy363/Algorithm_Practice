def dfs(graph,v,visited):
    visited[v] = True
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i ,visited) 

from collections import deque

def bfs(graph, v, visited):
	queue = deque([v])
	visited[v] = True #1
	
	while queue: #3
		n = queue.popleft()#2-1
		for i in graph[n]:
			if not visited[i]:#2-2
				queue.append(i) #2-3
				visited[i] = True #2-4	

# 각 노드가 연결된 정보를 리스트 자료형으로 표현(2차원 리스트)
graph = [
  [],
  [2, 3, 8],
  [1, 7],
  [1, 4, 5],
  [3, 5],
  [3, 4],
  [7],
  [2, 6, 8],
  [1, 7]
]

# 각 노드가 방문된 정보를 리스트 자료형으로 표현(1차원 리스트)
visited = [False] * 9

# 정의된 DFS 함수 호출
dfs(graph, 1, visited)
bfs(graph, 1, visited)